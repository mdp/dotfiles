# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

if [ -f /home/linuxbrew/.linuxbrew/bin/brew ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

if [ -d "$HOME/.cargo" ] ; then
    . "$HOME/.cargo/env"
fi

if [ -d "/usr/local/go" ] ; then
    export PATH=$PATH:/usr/local/go/bin
fi

export ASDF_DIR="$HOME/.asdf"
if [ -d $ASDF_DIR ] ; then
    export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"
    # Load completion based on current shell
    if [ -n "$ZSH_VERSION" ]; then
        . <(asdf completion zsh)
    elif [ -n "$BASH_VERSION" ]; then
        . <(asdf completion bash)
    fi
fi

export PATH="$HOME/.local/bin:$PATH"

# SSH agent setup - only run outside of tmux
if [ -z "$TMUX" ]; then
    # Create SSH directory if it doesn't exist
    if [ ! -d "$HOME/.ssh" ]; then
        mkdir -p "$HOME/.ssh"
        chmod 700 "$HOME/.ssh"
    fi

    # Fixed socket path
    SSH_AUTH_SOCK_LINK="$HOME/.ssh/ssh_auth_sock"

    # If we don't have an SSH_AUTH_SOCK and the symbolic is dead, start the ssh agent
    if [ -z "$SSH_AUTH_SOCK" ] && ! [ -S "$SSH_AUTH_SOCK_LINK" ]; then
        echo "Starting new SSH agent..."
        eval "$(ssh-agent -s)"
        ln -sf "$SSH_AUTH_SOCK" "$SSH_AUTH_SOCK_LINK"
    fi

    # Use the fixed socket path
    export SSH_AUTH_SOCK="$SSH_AUTH_SOCK_LINK"
fi
